[
  { "keys": ["super+ctrl+a"], "command": "alignment" },

  // Autocomplete
  { "keys": ["shift+space"], "command": "auto_complete" },
  { "keys": ["shift+space"], "command": "replace_completion_with_auto_complete", "context":
    [
      { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
      { "key": "setting.tab_completion", "operator": "equal", "operand": true }
    ]
  },
  
  // { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
  // { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
  //   "context":
  //   [
  //     { "key": "setting.tab_completion", "operator": "equal", "operand": true }
  //   ]
  // },
  
  // Auto-pair Rails erb tags
  { "keys": ["<", "%"], "command": "insert_snippet", "args": {"contents": "<%$0 %>"} },
  { "keys": ["shift+ctrl+,"], "command": "insert_snippet", "args": {"contents": "<%${0:$SELECTION} %>"}, "context":
    [
      { "key": "selector", "operator": "equal", "operand": true, "match_all": true }
    ]
  },
  { "keys": ["shift+ctrl+="], "command": "insert_snippet", "args": {"contents": "<%=${0:$SELECTION} %>"}, "context":
    [
      { "key": "selector", "operator": "equal", "operand": true, "match_all": true }
    ]
  },

  // Ruby string interpolation
  { "keys": ["#"], "command": "insert_snippet", "args": {"contents": "#{${0:$SELECTION}}"}, "context":
    [
      { "key": "selector", "operator": "equal", "operand": "(string.quoted.double.ruby|string.interpolated.ruby) - string source", "match_all": true }
    ]
  },

  // Auto-pair single quotes
  { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
    ]
  },

  // Trim Trailing Whitespace
  { "keys": ["shift+ctrl+t"], "command": "trim_trailing_whitespace" }

]
