[
  // Expand Selection to Quotes
  { "keys": ["super+shift+'"], "command": "expand_selection_to_quotes" },

  // Move Tabs
  { "keys": ["ctrl+shift+["], "command": "move_view", "args": {"direction": "left"} },
  { "keys": ["ctrl+shift+]"], "command": "move_view", "args": {"direction": "right"} },

  // MoveText
  { "keys": ["shift+super+left"], "command": "move_text_left" },
  { "keys": ["shift+super+right"], "command": "move_text_right" },
  { "keys": ["shift+super+up"], "command": "move_text_up" },
  { "keys": ["shift+super+down"], "command": "move_text_down" },

  // Custom
  { "keys": ["super+ctrl+a"], "command": "alignment" },
  { "keys": ["super+ctrl+j"], "command": "prettyjson" },
  { "keys": ["ctrl+shift+."], "command": "erb" },

  // Autocomplete
  { "keys": ["shift+space"], "command": "auto_complete" },
  { "keys": ["shift+space"], "command": "replace_completion_with_auto_complete", "context":
    [
      { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
      { "key": "setting.tab_completion", "operator": "equal", "operand": true }
    ]
  },

  // Ruby string interpolation
  { "keys": ["#"], "command": "insert_snippet", "args": {"contents": "#{${0:$SELECTION}}"}, "context":
    [
      { "key": "selector", "operator": "equal", "operand": "(string.quoted.double.ruby|string.interpolated.ruby) - string source", "match_all": true }
    ]
  },

  // Auto-pair single quotes
  { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
    ]
  },

  // Trim Trailing Whitespace
  { "keys": ["shift+ctrl+t"], "command": "trim_trailing_whitespace" },

  // CTags
  {
    "command": "navigate_to_definition",
    "context": [],
    "keys": [
      "super+t", "super+t"
    ]
  },
  {
    "command": "navigate_to_definition",
    "keys": [
      "super+alt+]"
    ]
  },
  {
    "command": "jump_back",
    "context": [],
    "keys": [
      "super+t", "super+b"
    ]
  },
  {
    "command": "jump_back",
    "keys": [
      "super+alt+["
    ]
  },
  {
    "command": "jump_back",
    "args": {
      "to": "last_modification"
    },
    "context": [],
    "keys": [
      "super+t", "super+m"
    ]
  },
  {
    "command": "rebuild_tags",
    "context": [],
    "keys": [
      "super+t", "super+r"
    ]
  },
  {
    "command": "show_symbols",
    "context": [
      {
        "key": "selector",
        "match_all": true,
        "operand": "source -source.css",
        "operator": "equal"
      }
    ],
    "keys": [
      "alt+s"
    ]
  },
  {
    "command": "show_symbols",
    "args": {
      "type": "multi"
    },
    "context": [
      {
        "key": "selector",
        "match_all": true,
        "operand": "source -source.css",
        "operator": "equal"
      }
    ],
    "keys": [
      "alt+shift+s"
    ]
  },
  {
    "command": "toggle_minimap",
    "keys": ["super+k","super+m"]
  }
]
